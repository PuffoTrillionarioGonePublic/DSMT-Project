package com.erldb

import java.io.InputStream
import java.io.Reader
import java.net.URL
import java.sql.*
import java.sql.Array

abstract class AbstractErldbPreparedStatement : ErldbStatement, PreparedStatement {
    constructor(connection: ErldbConnection, sql: String) : super(connection, sql) {}

    override fun setRowId(parameterIndex: Int, x: RowId) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setNString(parameterIndex: Int, value: String?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setNCharacterStream(parameterIndex: Int, value: Reader?, length: Long) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setNClob(parameterIndex: Int, value: NClob?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setClob(parameterIndex: Int, reader: Reader?, length: Long) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setBlob(parameterIndex: Int, inputStream: InputStream?, length: Long) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setNClob(parameterIndex: Int, reader: Reader?, length: Long) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setSQLXML(parameterIndex: Int, xmlObject: SQLXML?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setAsciiStream(parameterIndex: Int, x: InputStream?, length: Long) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setBinaryStream(parameterIndex: Int, x: InputStream?, length: Long) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setCharacterStream(parameterIndex: Int, reader: Reader?, length: Long) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setAsciiStream(parameterIndex: Int, x: InputStream?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setBinaryStream(parameterIndex: Int, x: InputStream?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setCharacterStream(parameterIndex: Int, reader: Reader?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setNCharacterStream(parameterIndex: Int, value: Reader?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setClob(parameterIndex: Int, reader: Reader?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setBlob(parameterIndex: Int, inputStream: InputStream?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setNClob(parameterIndex: Int, reader: Reader?) {
        throw SQLFeatureNotSupportedException()
    }

    override fun setArray(i: Int, x: Array) {
        throw unsupported()
    }

    override fun setBlob(i: Int, x: Blob) {
        throw unsupported()
    }

    override fun setClob(i: Int, x: Clob) {
        throw unsupported()
    }

    override fun setRef(i: Int, x: Ref) {
        throw unsupported()
    }

    override fun setURL(pos: Int, x: URL) {
        throw unsupported()
    }

    override fun execute(sql: String): Boolean {
        throw invalid()
    }

    override fun execute(sql: String, autoGeneratedKeys: Int): Boolean {
        throw invalid()
    }

    override fun executeUpdate(sql: String): Int {
        throw invalid()
    }

    override fun executeUpdate(sql: String, autoGeneratedKeys: Int): Int {
        throw invalid()
    }


    override fun executeLargeUpdate(sql: String): Long {
        throw invalid()
    }

    override fun executeLargeUpdate(sql: String, autoGeneratedKeys: Int): Long {
        throw invalid()
    }

    override fun executeQuery(sql: String): ResultSet {
        throw invalid()
    }

    override fun addBatch(sql: String): Nothing {
        throw invalid()
    }
}